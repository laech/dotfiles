
bind r source-file ~/.tmux.conf

unbind C-b
set -g prefix `
bind ` send-prefix

bind c new-window -c "#{pane_current_path}"
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

bind k kill-session

# Has to be one of screen* variant otherwise won't work properly.
# See tmux FAQ https://github.com/tmux/tmux/wiki/FAQ
set -g default-terminal screen-256color

set -g set-titles on
set -g set-titles-string "tmux - #{window_name}:#{s|$HOME|~|:pane_current_path}"

set -g history-limit 10000

set -g status-position top
set -g status-bg black
set -g status-fg default
set -g status-right '#[fg=brightyellow] #(battery) | #(date "+%a %d %b %I:%M %p") '
set -g status-left '#{?client_prefix,#[bg=yellow]#[fg=black] `#{session_name}`,#[bg=black]#[fg=yellow]  #{session_name} } '

bind M-s set synchronize-panes

set -g window-status-format " #{window_index}:#{window_name}:#{s|$HOME|~|:pane_current_path}#{?pane_synchronized,<sync>,} "
set -g window-status-style 'bg=black fg=brightyellow'
set -g window-status-current-format " #{window_index}:#{window_name}:#{s|$HOME|~|:pane_current_path}#{?pane_synchronized,#[fg=brightred]<sync>,} "
set -g window-status-current-style 'fg=white bg=brightblack'

set -g mouse on
bind M-m set mouse

setw -g aggressive-resize

set -g word-separators " @*?_-.[]~=/&;!#$%^(){}<>'\""

bind -T copy-mode C-g \
     if 'test #{selection_present} = 1' \
     'send -X clear-selection' \
     'send -X cancel'

# Keyboard copy/paste with system clipboard integration

bind -T copy-mode C-w \
    send -X copy-pipe "tmux-copy-to-clipboard" \; \
    send -X clear-selection

bind -T copy-mode M-w \
    send -X copy-pipe "tmux-copy-to-clipboard" \; \
    send -X clear-selection

bind ']' run 'tmux-copy-from-clipboard' \; pasteb -p
bind C-y run 'tmux-copy-from-clipboard' \; pasteb -p

update_paste='run "b=%% && tmux pasteb -p -b \$b && tmux saveb -b \$b - | tmux-copy-to-clipboard"'
bind '=' choose-buffer -F "#{buffer_sample}" $update_paste
bind M-y choose-buffer -F "#{buffer_sample}" $update_paste

# C-y is also a paste command in command-prompt and it's not configurable,
# therefore override ':' (default) to update clipboard before opening.
bind ':' run 'tmux-copy-from-clipboard' \; command-prompt

# Mouse drag to select

bind -T copy-mode MouseDragEnd1Pane \
     select-pane

# Mouse double click to copy word

bind -T copy-mode DoubleClick1Pane \
    select-pane \; \
    send -X select-word \; \
    send -X copy-pipe "tmux-copy-to-clipboard"

bind -n DoubleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send -X select-word \; \
    send -X copy-pipe "tmux-copy-to-clipboard"

# Mouse triple click to copy line

bind -T copy-mode TripleClick1Pane \
    select-pane \; \
    send -X select-line \; \
    send -X copy-pipe "tmux-copy-to-clipboard"

bind -n TripleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send -X select-line

# Mouse drag to copy selection

bind -T copy-mode MouseDragEnd1Pane \
    send -X copy-pipe "tmux-copy-to-clipboard"

# Mouse middle click to paste

bind -n MouseDown2Pane \
    select-pane \; \
    run 'tmux-copy-from-clipboard' \; \
    pasteb -p

# Scroll to work in less/man etc
# https://github.com/tmux/tmux/issues/157#issuecomment-150612608

bind -n WheelUpPane if -Ft= '#{?pane_in_mode,1,#{mouse_any_flag}}' \
    'send -Mt {mouse}' \
    'if -Ft {mouse} "#{alternate_on}" \
        "send -t {mouse} Up" \
        "copy-mode -et {mouse}"'

bind -n WheelDownPane if -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
    'send -Mt {mouse}' \
    'if -Ft {mouse} "#{alternate_on}" \
        "send -t {mouse} Down" \
        "send -Mt {mouse}"'
