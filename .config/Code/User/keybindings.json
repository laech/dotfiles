// Place your key bindings in this file to override the defaults
[
    {
        "key": "ctrl+w",
        "command": "editor.action.clipboardCutAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+x",
        "command": "-editor.action.clipboardCutAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+w",
        "command": "filesExplorer.cut",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+x",
        "command": "-filesExplorer.cut",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.reloadWindow",
        "when": "isDevelopment"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker"
    },
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+o",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFile"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openLocalFile",
        "when": "remoteFileDialogVisible"
    },
    {
        "key": "ctrl+s",
        "command": "-workbench.action.files.save"
    },
    {
        "key": "ctrl+s",
        "command": "repl.action.filter",
        "when": "inDebugRepl && textInputFocus"
    },
    {
        "key": "ctrl+s",
        "command": "editor.action.extensioneditor.showfind",
        "when": "!editorFocus && activeEditor == 'workbench.editor.extension'"
    },
    {
        "key": "ctrl+s",
        "command": "editor.action.webvieweditor.showFind",
        "when": "!editorFocus && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "ctrl+s",
        "command": "keybindings.editor.searchKeybindings",
        "when": "inKeybindings"
    },
    {
        "key": "ctrl+s",
        "command": "problems.action.focusFilter",
        "when": "problemsViewFocus"
    },
    {
        "key": "ctrl+s",
        "command": "settings.action.search",
        "when": "inSettingsEditor"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+k",
        "command": "deleteAllRight"
    },
    {
        "key": "ctrl+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+/",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+/",
        "command": "-toggleExplainMode",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "ctrl+s",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "ctrl+t",
        "command": "editor.action.transpose"
    },
    {
        "key": "alt+u",
        "command": "editor.action.transformToUppercase"
    },
    {
        "key": "alt+h",
        "command": "editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+h",
        "command": "-editor.showCallHierarchy",
        "when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
    },
    {
        "key": "shift+alt+h",
        "command": "editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+j",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "shift+alt+j",
        "command": "editor.action.addSelectionToPreviousFindMatch"
    },
    {
        "key": "alt+x",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "alt+x",
        "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "alt+l",
        "command": "-toggleFindInSelection",
        "when": "editorFocus"
    },
    {
        "key": "alt+l",
        "command": "editor.action.transformToLowercase"
    },
    {
        "key": "alt+1",
        "command": "-workbench.action.openEditorAtIndex1"
    },
    {
        "key": "alt+2",
        "command": "-workbench.action.openEditorAtIndex2"
    },
    {
        "key": "alt+3",
        "command": "-workbench.action.openEditorAtIndex3"
    },
    {
        "key": "alt+4",
        "command": "-workbench.action.openEditorAtIndex4"
    },
    {
        "key": "alt+5",
        "command": "-workbench.action.openEditorAtIndex5"
    },
    {
        "key": "alt+6",
        "command": "-workbench.action.openEditorAtIndex6"
    },
    {
        "key": "alt+7",
        "command": "-workbench.action.openEditorAtIndex7"
    },
    {
        "key": "alt+8",
        "command": "-workbench.action.openEditorAtIndex8"
    },
    {
        "key": "alt+9",
        "command": "-workbench.action.openEditorAtIndex9"
    },
    {
        "key": "alt+9",
        "command": "workbench.view.scm"
    },
    {
        "key": "ctrl+x g",
        "command": "workbench.view.scm"
    },
    {
        "key": "alt+3",
        "command": "workbench.view.search",
        "when": "!searchViewletVisible"
    },
    {
        "key": "alt+/",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+i",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+space",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+i",
        "command": "toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "alt+/",
        "command": "toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+space",
        "command": "-toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+\\",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+\\",
        "command": "editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+f",
        "command": "-editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+,",
        "command": "workbench.action.quickInputBack",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+alt+left",
        "command": "workbench.action.quickInputBack",
        "when": "inQuickOpen"
    },
    {
        "key": "alt+,",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "ctrl+alt+left",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "alt+backspace",
        "command": "deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+`",
        "command": "-workbench.action.terminal.new"
    },
    {
        "key": "ctrl+r",
        "command": "editor.action.previousMatchFindAction",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "ctrl+s",
        "command": "actions.find",
        "when": "!findInputFocussed"
    },
    {
        "key": "alt+enter",
        "command": "-editor.action.selectAllMatches",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "alt+enter",
        "command": "-debug.openBreakpointToSide",
        "when": "breakpointsFocused"
    },
    {
        "key": "alt+enter",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+enter",
        "command": "problems.action.showQuickFixes",
        "when": "problemFocus"
    },
    {
        "key": "alt+enter",
        "command": "settings.action.editFocusedSetting",
        "when": "inSettingsSearch"
    },
    {
        "key": "alt+;",
        "command": "editor.action.commentLine"
    },
    {
        "key": "shift+enter",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+f8",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "f9",
        "command": "-editor.debug.action.toggleBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "f9",
        "command": "workbench.action.debug.continue",
        "when": "inDebugMode"
    },
    {
        "key": "f7",
        "command": "-editor.action.wordHighlight.next",
        "when": "editorTextFocus && hasWordHighlights"
    },
    {
        "key": "f7",
        "command": "workbench.action.debug.stepInto",
        "when": "inDebugMode"
    },
    {
        "key": "f11",
        "command": "-workbench.action.debug.stepInto",
        "when": "inDebugMode"
    },
    {
        "key": "shift+f8",
        "command": "-editor.action.marker.prevInFiles",
        "when": "editorFocus && !editorReadonly"
    },
    {
        "key": "shift+f8",
        "command": "workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f8",
        "command": "-editor.action.marker.nextInFiles",
        "when": "editorFocus && !editorReadonly"
    },
    {
        "key": "f8",
        "command": "workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f10",
        "command": "-workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "ctrl+shift+f8",
        "command": "editor.debug.action.conditionalBreakpoint"
    },
    {
        "key": "alt+o",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "alt+.",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+alt+o",
        "command": "workbench.action.showAllSymbols"
    },
    {
        "key": "alt+g alt+g",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "ctrl+x ctrl+s",
        "command": "workbench.action.files.save"
    },
    {
        "key": "ctrl+x k",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+x 0",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "shift+alt+f",
        "command": "cursorWordEndRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+x ctrl+c",
        "command": "workbench.action.quit"
    },
    {
        "key": "ctrl+alt+s",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+alt+\\",
        "command": "editor.action.organizeImports",
        "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
    },
    {
        "key": "shift+alt+d",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+right",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+alt+b",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+f",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+\\",
        "command": "-editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+b",
        "command": "editor.action.selectToBracket"
    },
    {
        "key": "ctrl+shift+alt+f",
        "command": "editor.action.selectToBracket"
    },
    {
        "key": "alt+g n",
        "command": "editor.action.marker.next",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+g alt+n",
        "command": "editor.action.marker.next",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+g p",
        "command": "editor.action.marker.prev",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+g alt+p",
        "command": "editor.action.marker.prev",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+x 3",
        "command": "workbench.action.splitEditor"
    },
    {
        "key": "ctrl+\\",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "ctrl+x 2",
        "command": "workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "-workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "ctrl+x 1",
        "command": "workbench.action.editorLayoutSingle"
    },
    {
        "key": "ctrl+x ctrl+w",
        "command": "workbench.action.files.saveAs"
    },
    {
        "key": "ctrl+shift+s",
        "command": "-workbench.action.files.saveAs"
    },
    {
        "key": "ctrl+h i",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+h p",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "alt+s f",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "alt+s r",
        "command": "workbench.action.replaceInFiles"
    },
    {
        "key": "alt+s u",
        "command": "editor.action.referenceSearch.trigger",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "alt+s shift+u",
        "command": "references-view.find",
        "when": "editorHasReferenceProvider"
    },
    {
        "key": "ctrl+alt+r",
        "command": "editor.action.refactor",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k e",
        "command": "-workbench.files.action.focusOpenEditorsView",
        "when": "workbench.explorer.openEditorsView.active"
    },
    {
        "key": "alt+1",
        "command": "workbench.files.action.focusFilesExplorer"
    },
    {
        "key": "ctrl+x d",
        "command": "workbench.files.action.focusFilesExplorer"
    },
    {
        "key": "ctrl+alt+m",
        "command": "workbench.action.toggleCenteredLayout"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "ctrl+/",
        "command": "workbench.action.toggleStatusbarVisibility"
    },
    {
        "key": "ctrl+alt+p",
        "command": "breadcrumbs.toggle"
    },
    {
        "key": "ctrl+shift+/",
        "command": "workbench.action.toggleActivityBarVisibility"
    },
    {
        "key": "alt+.",
        "command": "git.openFile"
    },
    {
        "key": "shift+alt+]",
        "command": "editor.action.dirtydiff.next",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+[",
        "command": "editor.action.dirtydiff.previous",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+]",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "isInDiffEditor"
    },
    {
        "key": "shift+alt+[",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+alt+z",
        "command": "git.clean"
    },
    {
        "key": "ctrl+alt+z",
        "command": "git.revertSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "-git.revertSelectedRanges",
        "when": "isInDiffEditor"
    }
]
