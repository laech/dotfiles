
// To enable, save this file as /usr/share/X11/xkb/symbols/custom and run:
//
//   setxkbmap -option '' "custom"
//
// If fcitx/ibus is in use, they need to be configured not to override
// the system setting.
// For ibus enable: Preference | Advanced | Use system keyboard layout
// For fcitx disable: Configure | Addon | Advanced | X Keyboard Integration
// | Configure | Allow to Override System XKB Settings

default partial alphanumeric_keys
xkb_symbols "basic" {

    // Base keyboard functionality, using 'us' here
    // See definitions in /usr/share/X11/xkb/symbols
    // e.g. 'include "us(intl)"' where 'intl' is defined inside the 'us' file
    include "us"

    // Press Shift_L + Shift_R together as an alternative way to toggle
    // Caps_Lock, then turn CAPS key to enable level3 shift when and only
    // when holding down.
    include "shift(both_capslock)"
    include "level3(caps_switch)"

    // Emacs like navigation keys when holding down <CAPS>
    // e.g. caps + n to go down
    key <AB05> { // b
        actions=[
            NoAction(),
            NoAction(),
            Redirect(key=<LEFT>, clearmods=All),
            Redirect(key=<LEFT>, clearmods=All, mods=Shift)
        ]
    };
    key <AC04> { // f
        actions=[
            NoAction(),
            NoAction(),
            Redirect(key=<RGHT>, clearmods=All),
            Redirect(key=<RGHT>, clearmods=All, mods=Shift)
        ]
    };
    key <AD10> { // p
        actions=[
            NoAction(),
            NoAction(),
            Redirect(key=<UP>, clearmods=All),
            Redirect(key=<UP>, clearmods=All, mods=Shift)
        ]
    };
    key <AB06> { // n
        actions=[
            NoAction(),
            NoAction(),
            Redirect(key=<DOWN>, clearmods=All),
            Redirect(key=<DOWN>, clearmods=All, mods=Shift)
        ]
    };
    key <AC01> { // a
        actions=[
            NoAction(),
            NoAction(),
            Redirect(key=<HOME>, clearmods=All),
            Redirect(key=<HOME>, clearmods=All, mods=Shift)
        ]
    };
    key <AD03> { // e
        actions=[
            NoAction(),
            NoAction(),
            Redirect(key=<END>, clearmods=All),
            Redirect(key=<END>, clearmods=All, mods=Shift)
        ]
    };
    key <AC05> { // g
        actions=[
            NoAction(),
            NoAction(),
            Redirect(key=<ESC>, clearmods=All),
            Redirect(key=<ESC>, clearmods=All, mods=Shift)
        ]
    };

    // Emacs like editing keys when holding down <CAPS>
    // Redo/Undo only work with applications that understand them.
    key <AB10> { // /
        actions=[
            NoAction(),
            NoAction(),
            Redirect(key=<UNDO>, clearmods=All),
            Redirect(key=<AGAI>, clearmods=All)
        ]
    };
    key <AC03> { // d
        actions=[
            NoAction(),
            NoAction(),
            Redirect(key=<DELE>, clearmods=All),
            Redirect(key=<DELE>, clearmods=All, mods=Shift)
        ]
    };
    key <AD06> { // y
        actions=[
            NoAction(),
            NoAction(),
            Redirect(key=<INS>, clearmods=All, mods=Shift)
        ]
    };
    key <AD02> { // w
        actions=[
            NoAction(),
            NoAction(),
            Redirect(key=<INS>, clearmods=All, mods=Control)
        ]
    };

//    key <AB01> { // z
//        actions=[
//            NoAction(),
//            NoAction(),
//            Redirect(key=<UNDO>, clearmods=All),
//            Redirect(key=<AGAI>, clearmods=All)
//        ]
//    };

//    key <AB02> { // x
//        actions=[
//            NoAction(),
//            NoAction(),
//            Redirect(key=<DELE>, clearmods=All, mods=Shift)
//        ]
//    };

//    key <AB03> { // c
//        actions=[
//            NoAction(),
//            NoAction(),
//            Redirect(key=<INS>, clearmods=All, mods=Control)
//        ]
//    };

//    key <AB04> { // v
//        actions=[
//            NoAction(),
//            NoAction(),
//            Redirect(key=<INS>, clearmods=All, mods=Shift)
//        ]
//    };

    key <LEFT> {
        symbols=[Left, Left],
        actions=[
            NoAction(),
            NoAction(),
            Redirect(key=<HOME>, clearmods=All),
            Redirect(key=<HOME>, clearmods=All, mods=Shift)
        ]
    };

    key <RGHT> {
        symbols=[Right, Right],
        actions=[
            NoAction(),
            NoAction(),
            Redirect(key=<END>, clearmods=All),
            Redirect(key=<END>, clearmods=All, mods=Shift)
        ]
    };

    key <UP> {
        symbols=[Up, Up],
        actions=[
            NoAction(),
            NoAction(),
            Redirect(key=<HOME>, clearmods=All, mods=Control),
            Redirect(key=<HOME>, clearmods=All, mods=Control+Shift)
        ]
    };

    key <DOWN> {
        symbols=[Down, Down],
        actions=[
            NoAction(),
            NoAction(),
            Redirect(key=<END>, clearmods=All, mods=Control),
            Redirect(key=<END>, clearmods=All, mods=Control+Shift)
        ]
    };
};
